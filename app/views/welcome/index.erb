<div class="text-center">  
    
  <div class="container">
      <h1 id="header_text">Nick Anderson's Programming Test.</h1>
      <h5>
          ( <a href="http://nickanderson.rocks/" target="_blank">Website</a>  |
          <a href="https://github.com/nickandersonr" target="_blank">Github</a> |
          <a href="https://www.linkedin.com/in/nickandersonr" target="_blank">LinkedIn</a> |
          <a href="mailto:nick.anderson.r@gmail.com" target="_blank">Mail</a> )
      </h5>
    <section id="contact_form" class="content bgcolor-5">
        <h2>HELLO! Please send me a nice message.</h2>

        
        
        <form id="submission_form" method="post">
            <div class="input_holder">
                <span class="input input--minoru">
                    <input class="input__field input__field--yoko" type="text" name="firstname" id="input-16" />
                    <label class="input__label input__label--yoko" for="input-16">
                        <span class="input__label-content input__label-content--yoko">First Name</span>
                    </label>
                </span>
                <span class="input input--minoru">
                    <input class="input__field input__field--yoko" type="text" name="lastname" id="input-17" />
                    <label class="input__label input__label--yoko" for="input-17">
                        <span class="input__label-content input__label-content--yoko">Last Name</span>
                    </label>
                </span>
                
                <span class="input input--minoru">
                    <input class="input__field input__field--yoko" type="text" name="email" id="input-18" />
                    <label class="input__label input__label--yoko" for="input-18">
                        <span class="input__label-content input__label-content--yoko">Email<sup>*</sup></span>
                    </label>
                </span>
                <span class="input input--minoru">
                    <input class="input__field input__field--yoko" type="text" name="phone" id="input-19" />
                    <label class="input__label input__label--yoko" for="input-19">
                        <span class="input__label-content input__label-content--yoko">Phone<sup>*</sup></span>
                    </label>
                </span>
                
                <span class="input input--minoru message_input">
                    <input class="input__field input__field--yoko" type="text" name="message" id="input-21" />
                    <label class="input__label input__label--yoko" for="input-21">
                        <span class="input__label-content input__label-content--yoko">Message</span>
                    </label>
                </span>
                <span class="input input--minoru submit_container">
                    <input class="input__field input__field--yoko" type="submit" value="Send" id="input-22" />
                    <label class="input__label input__label--yoko input__label--yoko--submit" for="input-22">
                        <span class="input__label-content input__label-content--yoko">&nbsp;</span>
                    </label>
                </span>
            </div>
        </form>
        
    </section> 
   </div>
   <div id="results" class="container-fluid">
       <section class="content">
            <h2>This is what others have said:</h2>
            <div id="results_list" class="container">
                <div class="result_item">
                    <h3><span>Ian</span>&nbsp;<span>Curtis</span> says:</h3>
                    <p>"A contact form as simple as it is complex. A real breath of fresh air."</p>
                </div>
                <div class="result_item">
                    <h3><span>John</span>&nbsp;<span>Lydon</span> says:</h3>
                    <p>"It's not just about the form - its about chaos one form can provoke."</p>
                </div>
                <div class="result_item">
                    <h3><span>Johnny</span>&nbsp;<span>Marr</span> says:</h3>
                    <p>"An invigorating blend of inputs and buttons. Simply fascinating."</p>
                </div>
                <div class="result_item">
                    <h3><span>Ian</span>&nbsp;<span>MacKaye</span> says:</h3>
                    <p>"Heartfelt and endearing. Nick Anderon's form is sure to leave a mark on your soul."</p>
                </div>
            </div>
        </section>
    </div>
    <div id="explination" class="container-fluid">
        <div class="container">
           <section class="content">
                <h2>So clearly this doesn't work.</h2>
                <p>
                    I have tried very hard, but have failed to satisfy every part of your programming test. However,
                    I wanted to give you a list of what I DID accomplish, since there are many factors involved in 
                    the success of this particular test - that might give you a better understanding of my exact skillset.
                    Its possible that the pieces I've missed are actually easy to learn and just require a bit more experience.
                </p>
               <ol>
                    <li>Set up a <a href="https://thawing-garden-1191.herokuapp.com/" target="_blank">test instance of Heroku</a> with their basic example</li>
                   <li>Set up <a href="https://github.com/nickandersonr/heroku" target="_blank">a repo</a> for the project</li>
                   <li>Installed postgres and the dependant gems for my project</li>
                   <li>Set the $PATH so that my project could access a database</li>
                   <li>Got Heroku running locally</li>
                   <li>Got local changes deploying to this page</li>
                   <li>Learned Ruby syntax for forms, mostly with the help of Docs and StackOverflow</li>
                   <li>Created a new Ruby class to collect form information</li>
                   <li>Used "require" to call in new class, controller</li>
                   <li>Ran out of time while trying to create a new table through PostgreSQL</li>
                   <li>Decided to use remaining time to make this list</li>
               </ol>
               <p>
                    This was my first time really digging into architecting a solution with Ruby - while I've worked in Ruby systems before,
                   I've never been the one rolling out the basic structure and setting things up, so a lot of this was uncharted territory for me.
                   That being said, I was able to get rather far just by searching out information and trying things. For that reason I wouldn't say 
                   that anything in this test is inately out of my skillset, just out of my ever-expanding comfort zone.
               </p>
               <p>
                    Thanks for your time reviewing this - Let me know if I can provide anything else!
               </p>
               <p>
                    - Nick Anderson
                   <br>
                   nick.anderson.r@gmail.com
                   <br>
                   <h5>
                      ( <a href="http://nickanderson.rocks/" target="_blank">Website</a>  |
                      <a href="https://github.com/nickandersonr" target="_blank">Github</a> |
                      <a href="https://www.linkedin.com/in/nickandersonr" target="_blank">LinkedIn</a> |
                      <a href="mailto:nick.anderson.r@gmail.com" target="_blank">Mail</a> )
                  </h5>
               </p>
            </section>
        </div>
    </div>
</div>

<script src="../../assets/javascripts/classie.js"></script>
		<script>
			(function() {
				// trim polyfill : https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/Trim
				if (!String.prototype.trim) {
					(function() {
						// Make sure we trim BOM and NBSP
						var rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;
						String.prototype.trim = function() {
							return this.replace(rtrim, '');
						};
					})();
				}

				[].slice.call( document.querySelectorAll( 'input.input__field' ) ).forEach( function( inputEl ) {
					// in case the input is already filled..
					if( inputEl.value.trim() !== '' ) {
						classie.add( inputEl.parentNode, 'input--filled' );
					}

					// events:
					inputEl.addEventListener( 'focus', onInputFocus );
					inputEl.addEventListener( 'blur', onInputBlur );
				} );

				function onInputFocus( ev ) {
					classie.add( ev.target.parentNode, 'input--filled' );
				}

				function onInputBlur( ev ) {
					if( ev.target.value.trim() === '' ) {
						classie.remove( ev.target.parentNode, 'input--filled' );
					}
				}
			})();
		</script>
